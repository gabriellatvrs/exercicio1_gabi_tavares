	
Label Root
{
	Son: SECTOR
	Label SECTOR
	{
		Son: FIRM
		Label FIRM
		{
			Var: X
			Var: P
			Var: QUAL
			Var: X_Marketshare

		}


	}


}


DATA

Object: Root C	1

Object: SECTOR C	1

Object: FIRM C	10
Var: X 1 s + n n	10	10	10	10	10	10	10	10	10	10
Var: P 1 s + n n	1	1	1	1	1	1	1	1	1	1
Var: QUAL 1 s + n n	1	1	1	1	1	1	1	1	1	1
Var: X_Marketshare 1 s + n n	1	1	1	1	1	1	1	1	1	1

SIM_NUM 1
SEED 3
MAX_STEP 100
EQUATION fun_exercicio1.cpp
MODELREPORT report_Sim1.html

DESCRIPTION

Object_Root
(no description available)
END_DESCRIPTION

Object_SECTOR
(no description available)
_INIT_

END_DESCRIPTION

Object_FIRM
(no description available)
_INIT_

END_DESCRIPTION

Variable_X
(no description available)
_INIT_
All 1 instances equal to 10.
END_DESCRIPTION

Variable_P
(no description available)
_INIT_
All 1 instances equal to 1.
END_DESCRIPTION

Variable_QUAL
(no description available)
_INIT_
All 1 instances equal to 1.
END_DESCRIPTION

Variable_X_Marketshare
Variável da Firma
_INIT_
All 1 instances equal to 1.
END_DESCRIPTION


DOCUOBSERVE

END_DOCUOBSERVE


DOCUINITIAL

END_DOCUINITIAL


EQ_FILE
//#define EIGENLIB			// uncomment to use Eigen linear algebra library
//#define NO_POINTER_INIT	// uncomment to disable pointer checking

#include "fun_head_fast.h"

// do not add Equations in this area

MODELBEGIN

// insert your equations here, between the MODELBEGIN and MODELEND words

/* 
ou assim para comentar em parágrafos
ctrl + i mostra os macros
c++ reconhece maiúsculo vs. minúsculo
não aceita acento, espaço ou caractere especial, apenas _
*/

/*
EQUATION("X")

Variável X e c da Firma, min e max parâmetros da Firma
V: chamando o valor da variável 
L: lag - defasagens - quantos períodos pra trás 
S: specific object 
c: é um parâmetro, valor fixo no tempo, não precisa descrever equação para parâmetro

RESULT(VL("X",1)+V("c"))

EQUATION("c") 
v[0]=V("min");
v[1]=V("max");
v[2]=uniform(v[0], v[1]); // Na hora da simulação, colocamos os parâmetros que quisermos para min e max
RESULT(v[2])


OUTRAS FORMAS DE FAZER 

EQUATION("X")
RESULT(VL("X",1)+RND)

EQUATION("X")
v[0]=VL("X",1);
v[1]=V("c");
v[2]=v[0]+v[1];
RESULT(v[2])
Tem que manter a definição da equação "c" em seguida
*/

// MODELO COM IDEIAS ECONÔMICAS 

EQUATION("X") 
/* 
X = Vendas no nível da Firma
Vendas é Preço x Quantidade
Quantidade é influencidada pelo preço + qualidade + fator aleatório
*/
v[0]=VL("X",1);
v[1]=V("P");
v[2]=V("QUAL");
v[3]=0.5*v[1]+0.3*v[2]+0.2*(RND+1);
v[4]=v[1]*v[3];
RESULT(v[3])


EQUATION("P") // P = Preço no nível da Firma
v[0]=VL("X_Marketshare", 1);
v[1]=V("X_Marketshare");
		if(v[1]>=v[0]) 	
		v[2]=((v[1]-v[0])/v[0])+1; 
		else 
		v[2]=1;
v[3]=VL("P",1);
v[4]=v[2]*v[3];
RESULT(v[4])


EQUATION("QUAL") // QUAL = Qualidade no nível da Firma
v[0]=VL("QUAL", 1);
v[1]=V("QUAL");
v[2]=0;
		if(v[1]>=v[0]) 	
		v[2]=v[1]+RND; 
		else 
		v[2]=v[0]+RND;
RESULT(v[2])


EQUATION("X_Sum")
/*
Variável do Setor
*/
v[0]=0;
CYCLE(cur, "FIRM")
{
	v[1]=VS(cur,"X");
	v[0]=v[0]+v[1];
}

RESULT(v[0])

EQUATION("X_Ave")
/*
Variável do Setor
*/
v[0]=0;
v[1]=0;
v[2]=0;
CYCLE(cur, "FIRM")
{
	v[3]=VS(cur,"X");
	v[0]=v[0]+v[3];
	v[1]=v[1]+1;
}
if(v[1]==0)	
v[2]=0; 
else 
v[2]=v[0]/v[1]
RESULT(v[2])
//v[1] pode ser v[1]=COUNT("FIRM") e tira o v[1]=0 de cima
//pode substituir o if else por: v[2] = v[1] != 0? v[0]/v[1] : 0; 

EQUATION("X_Max")
/*
Variável do Setor
*/
v[0]=0;
CYCLE(cur, "FIRM")
{
	v[1]=VS(cur,"X");
	
	if(v[1]>=v[0]) 	
	v[0]=v[1]; 
	else 
	v[0]=v[0];
}
RESULT(v[0])
//pode substituir o if else por: v[0]=v[2]>v[0]?v[2]:v[0];


EQUATION("X_Marketshare")
/*
Variável da Firma
*/
RESULT((V("X")/V("X_Sum")))
/*
Forma extensa alternativa:
v[0]=V("X")
v[1]=V("X_Sum")
if(v[1]!=0)
v[2]=v[0]/v[1]
else
v[2]=0
RESULT(v[2])
*/

EQUATION("Marketshare_Sum")
/*
Variável da Setor
*/
v[0]=0;
CYCLE(cur, "FIRM")
{
	v[1]=VS(cur,"X_Marketshare");
	v[0]=v[0]+v[1];
}
RESULT(v[0])
//Mais simples: RESULT(SUM("X_Marketshare"))


EQUATION("Leader")
/*
Variável do Setor 
*/
v[0]=0;
v[1]=0;
CYCLE(cur, "FIRM")
{
	v[1]++;
	//é a mesma coisa que v[1]=v[1]+1 
	v[2]=VS(cur, "X");
	if(v[2]>v[0])
		{
		v[0]=v[2];
		v[3]=v[1];
		}	
}
RESULT(v[3])
/*
Usando o SEARCH:
 
EQUATION("Leader") 
v[0]=V("X_Max"); 
cur1=SEARCH_CND("X", v[0]); 
v[1]=SEARCH_INST(cur1);
RESULT(v[1])

Já sabe o valor máx, então procura a firma condicionado ao valor que você estipulou 
v[1] é o resultado da pesquisa da instância (a posição) da firm de valor máx encontrada
*/

EQUATION("Rank")
/*
Variável do Setor
*/
		SORT("FIRM", "X", "DOWN");
		v[0]=0;
		CYCLE(cur,"FIRM")
				{
				v[0]++;
				WRITES(cur, "Firm_Rank", v[0]); // Firm_Rank é parâmetro da Firma
				}
RESULT(0)

/* 
Se quiser que seja uma variável ou invés de parâmetro 
EQUATION_DUMMY("Firm_Rank", "Rank")
*/
		
EQUATION("EntryExit")
		v[0]=V("switch_entry");
		if(v[0]==1)
		{
				cur=SEARCH_CND("rank", 10);
				DELETE(cur); // Deletar a última firma do rank
				cur1=SEARCH_CND("rank", 5);
				ADDOBJ_EX("FIRM", cur1); // Cria um novo objeto usando o ranking 5 como exemplo
		}
RESULT(0)


MODELEND

// do not add Equations in this area

void close_sim( void )
{
	// close simulation special commands go here
}

END_EQ_FILE
